export const APPLIES_ON_ENUM = ['enum'];
export const APPLIES_ON_ENUM_VALUE = ['enum_value'];
export const APPLIES_ON_CLASS = ['class'];
export const APPLIES_ON_DEFAULT_FACTORY = ['factory', 'default_factory'];
export const APPLIES_ON_UNION_FACTORY = ['factory', 'named_factory', 'union_factory'];
export const APPLIES_ON_MERGED_FACTORY = ['factory', 'named_factory', 'merged_factory'];
export const APPLIES_ON_FACTORY = [
    'factory',
    'default_factory',
    'named_factory',
    'merged_factory',
    'union_factory',
];
export const APPLIES_ON_DEFAULT_FACTORY_PARAMETERS = [
    'parameter',
    'default_factory_parameter',
];
export const APPLIES_ON_UNION_FACTORY_PARAMETERS = [
    'parameter',
    'named_factory_parameter',
    'union_factory_parameter',
];
export const APPLIES_ON_MERGED_FACTORY_PARAMETERS = [
    'parameter',
    'named_factory_parameter',
    'merged_factory_parameter',
];
export const APPLIES_ON_PARAMETERS = [
    'parameter',
    'default_factory_parameter',
    'named_factory_parameter',
    'union_factory_parameter',
    'merged_factory_parameter',
];
export const APPLIES_ON_ALL_BLOCKS = [
    'enum',
    'enum_value',
    'class',
    'factory',
    'parameter',
];
/**
 * maps GraphQL scalar types to Dart's scalar types
 */
export const DART_SCALARS = {
    ID: 'String',
    String: 'String',
    Boolean: 'bool',
    Int: 'int',
    Float: 'double',
    DateTime: 'DateTime',
};
export const DART_KEYWORDS = {
    abstract: 'built-in',
    else: 'reserved',
    import: 'built-in',
    show: 'context',
    as: 'built-in',
    enum: 'reserved',
    in: 'reserved',
    static: 'built-in',
    assert: 'reserved',
    export: 'built-in',
    interface: 'built-in',
    super: 'reserved',
    async: 'context',
    extends: 'reserved',
    is: 'reserved',
    switch: 'reserved',
    await: 'async-reserved',
    extension: 'built-in',
    late: 'built-in',
    sync: 'context',
    break: 'reserved',
    external: 'built-in',
    library: 'built-in',
    this: 'reserved',
    case: 'reserved',
    factory: 'built-in',
    mixin: 'built-in',
    throw: 'reserved',
    catch: 'reserved',
    false: 'reserved',
    new: 'reserved',
    true: 'reserved',
    class: 'reserved',
    final: 'reserved',
    null: 'reserved',
    try: 'reserved',
    const: 'reserved',
    finally: 'reserved',
    on: 'context',
    typedef: 'built-in',
    continue: 'reserved',
    for: 'reserved',
    operator: 'built-in',
    var: 'reserved',
    covariant: 'built-in',
    Function: 'built-in',
    part: 'built-in',
    void: 'reserved',
    default: 'reserved',
    get: 'built-in',
    required: 'built-in',
    while: 'reserved',
    deferred: 'built-in',
    hide: 'context',
    rethrow: 'reserved',
    with: 'reserved',
    do: 'reserved',
    if: 'reserved',
    return: 'reserved',
    yield: 'async-reserved',
    dynamic: 'built-in',
    implements: 'built-in',
    set: 'built-in',
    // built-in types
    int: 'reserved',
    double: 'reserved',
    String: 'reserved',
    bool: 'reserved',
    List: 'reserved',
    Set: 'reserved',
    Map: 'reserved',
    Runes: 'reserved',
    Symbol: 'reserved',
    Object: 'reserved',
    Null: 'reserved',
    Never: 'reserved',
    Enum: 'reserved',
    Future: 'reserved',
    Iterable: 'reserved',
};
/** initializes a FreezedPluginConfig with the defaults values */
export const defaultFreezedPluginConfig = {
    camelCasedEnums: true,
    copyWith: undefined,
    customScalars: {},
    defaultValues: undefined,
    deprecated: undefined,
    equal: undefined,
    escapeDartKeywords: true,
    final: undefined,
    // fromJsonToJson: true, // TODO: @next-version
    ignoreTypes: undefined,
    immutable: true,
    makeCollectionsUnmodifiable: undefined,
    mergeTypes: undefined,
    mutableInputs: true,
    privateEmptyConstructor: true,
    unionClass: undefined,
};
//#endregion
