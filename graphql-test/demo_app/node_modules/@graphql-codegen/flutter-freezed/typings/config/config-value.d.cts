import { FieldName, TypeName, TypeNamePattern } from './pattern.cjs';
import { AppliesOn, AppliesOnFactory, AppliesOnParameters, FlutterFreezedPluginConfig } from './plugin-config.cjs';
export declare class Config {
    static camelCasedEnums: (config: FlutterFreezedPluginConfig) => import("./plugin-config.js").DartIdentifierCasing;
    static copyWith: (config: FlutterFreezedPluginConfig, typeName?: TypeName) => boolean;
    static customScalars: (config: FlutterFreezedPluginConfig, graphqlScalar: string) => string;
    static defaultValues: (config: FlutterFreezedPluginConfig, blockAppliesOn: readonly AppliesOnParameters[], typeName: TypeName, fieldName: FieldName) => string;
    static deprecated: (config: FlutterFreezedPluginConfig, blockAppliesOn: readonly (AppliesOnFactory | AppliesOnParameters)[], typeName: TypeName, fieldName?: FieldName) => "" | "@deprecated\n";
    static equal: (config: FlutterFreezedPluginConfig, typeName?: TypeName) => boolean;
    static escapeDartKeywords: (config: FlutterFreezedPluginConfig, blockAppliesOn: readonly AppliesOn[], typeName?: TypeName, fieldName?: FieldName) => [prefix?: string, suffix?: string];
    static final: (config: FlutterFreezedPluginConfig, blockAppliesOn: readonly AppliesOnParameters[], typeName: TypeName, fieldName: FieldName) => boolean;
    static ignoreTypes: (config: FlutterFreezedPluginConfig, typeName: TypeName) => string[];
    static immutable: (config: FlutterFreezedPluginConfig, typeName?: TypeName) => boolean;
    static makeCollectionsUnmodifiable: (config: FlutterFreezedPluginConfig, typeName?: TypeName) => boolean;
    static mergeTypes: (config: FlutterFreezedPluginConfig, typeName: TypeName) => TypeName[];
    static mutableInputs: (config: FlutterFreezedPluginConfig, typeName?: TypeName) => boolean;
    static privateEmptyConstructor: (config: FlutterFreezedPluginConfig, typeName?: TypeName) => boolean;
    static unionClass: () => any;
    static unionKey: () => string | undefined;
    static unionValueCase: () => string | undefined;
    static unionValueFactoryDecorator: () => any;
    static enableWithBooleanOrTypeFieldName: (value?: boolean | TypeNamePattern, typeName?: TypeName) => boolean;
    static create: (...config: Partial<FlutterFreezedPluginConfig>[]) => FlutterFreezedPluginConfig;
}
